{"version":3,"file":"package_settings.min.js","sources":["../src/package_settings.js"],"sourcesContent":["/*\n * This file is part of the QuestionPy Moodle plugin - https://questionpy.org\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {call as callMany} from 'core/ajax';\nimport {get_string as getString} from 'core/str';\n\n\n/**\n * Initializes an action button which calls a service.\n *\n * @param {string} service\n * @param {HTMLElement} button\n * @param {HTMLElement} totalPackagesStatus\n * @param {HTMLElement} loadingIcon\n * @param {HTMLElement} errorStatus\n */\nfunction initActionButton(service, button, totalPackagesStatus, loadingIcon, errorStatus) {\n    button.addEventListener('click', e => {\n        e.preventDefault();\n\n        // Hide error status if it was visible.\n        errorStatus.classList.add('d-none');\n        // Show loading icon.\n        loadingIcon.classList.remove('d-none');\n\n        // Call service and update status.\n        callMany([{\n            methodname: service,\n            args: {},\n            done: data => {\n                getString('total_packages', 'qtype_questionpy', data).then(string => {\n                    totalPackagesStatus.innerText = string;\n                    return true;\n                }).catch(() => {\n                    return true;\n                });\n                // Hide loading icon.\n                loadingIcon.classList.add('d-none');\n            },\n            fail: () => {\n                // Show error status.\n                errorStatus.classList.remove('d-none');\n                // Hide loading icon.\n                loadingIcon.classList.add('d-none');\n            },\n        }]);\n    });\n}\n\n/**\n * Initializes the buttons to load and remove packages.\n */\nexport function init() {\n    let totalPackagesStatus = document.getElementById('qpy-total-packages');\n\n    // Initialize button to load packages.\n    initActionButton(\n        'qtype_questionpy_load_packages',\n        document.getElementById('qpy-load-packages-button'),\n        totalPackagesStatus,\n        document.getElementById('qpy-load-packages-icon'),\n        document.getElementById('qpy-load-packages-error-message')\n    );\n\n    // Initialize button to remove packages.\n    initActionButton(\n        'qtype_questionpy_remove_packages',\n        document.getElementById('qpy-remove-packages-button'),\n        totalPackagesStatus,\n        document.getElementById('qpy-remove-packages-icon'),\n        document.getElementById('qpy-remove-packages-error-message')\n    );\n\n}\n"],"names":["initActionButton","service","button","totalPackagesStatus","loadingIcon","errorStatus","addEventListener","e","preventDefault","classList","add","remove","methodname","args","done","data","then","string","innerText","catch","fail","document","getElementById"],"mappings":"sHA8BSA,iBAAiBC,QAASC,OAAQC,oBAAqBC,YAAaC,aACzEH,OAAOI,iBAAiB,SAASC,IAC7BA,EAAEC,iBAGFH,YAAYI,UAAUC,IAAI,UAE1BN,YAAYK,UAAUE,OAAO,yBAGpB,CAAC,CACNC,WAAYX,QACZY,KAAM,GACNC,KAAMC,2BACQ,iBAAkB,mBAAoBA,MAAMC,MAAKC,SACvDd,oBAAoBe,UAAYD,QACzB,KACRE,OAAM,KACE,IAGXf,YAAYK,UAAUC,IAAI,WAE9BU,KAAM,KAEFf,YAAYI,UAAUE,OAAO,UAE7BP,YAAYK,UAAUC,IAAI,sGAUlCP,oBAAsBkB,SAASC,eAAe,sBAGlDtB,iBACI,iCACAqB,SAASC,eAAe,4BACxBnB,oBACAkB,SAASC,eAAe,0BACxBD,SAASC,eAAe,oCAI5BtB,iBACI,mCACAqB,SAASC,eAAe,8BACxBnB,oBACAkB,SAASC,eAAe,4BACxBD,SAASC,eAAe"}