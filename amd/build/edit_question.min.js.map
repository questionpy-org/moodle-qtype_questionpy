{"version":3,"file":"edit_question.min.js","sources":["../src/edit_question.js"],"sourcesContent":["/*\n * This file is part of the QuestionPy Moodle plugin - https://questionpy.org\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {resetFormDirtyState} from \"core_form/changechecker\";\n\n/**\n * This function is required by <code>qtype_questionpy::display_question_editing_page()</code>.\n *\n * When the package is changed, this function enables the hidden form element <code>qpy_package_changed</code> and\n * submits the form. Since <code>qpy_package_changed</code> is registered as a no-submit button, it prevents the form\n * data from being saved to the question, while still re-rendering the form with access to the new selected package\n * hash.\n */\nexport function init() {\n    const packageChanged = document.querySelector('input[name=\"qpy_package_changed\"]');\n    const packageHash = document.querySelector('input[name=\"qpy_package_hash\"]');\n\n    // Check if a package is currently selected.\n    if (packageHash.value) {\n        // Initialize the button to change the package.\n        const changeButton = document.getElementsByClassName(\"qpy-version-selection-button\")[0];\n        changeButton.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n\n            // Remove package hash.\n            packageChanged.removeAttribute(\"disabled\");\n            packageHash.value = '';\n\n            // We do not want any form checking when changing a package.\n            resetFormDirtyState(changeButton);\n            e.target.form.submit();\n        });\n    } else {\n        document.getElementsByClassName(\"qpy-card-action\")\n            .forEach(card => {\n                // Initialize each select button of every card.\n                const selectedHash = card.getElementsByClassName(\"qpy-version-selection\")[0];\n                const selectButton = card.getElementsByClassName(\"qpy-version-selection-button\")[0];\n                selectButton.addEventListener(\"click\", (e) => {\n                    e.preventDefault();\n\n                    // Set package hash.\n                    packageChanged.removeAttribute(\"disabled\");\n                    packageHash.value = selectedHash.value;\n\n                    // We do not want any form checking when selecting a package.\n                    resetFormDirtyState(selectButton);\n                    e.target.form.submit();\n                });\n            });\n    }\n}\n"],"names":["packageChanged","document","querySelector","packageHash","value","changeButton","getElementsByClassName","addEventListener","e","preventDefault","removeAttribute","target","form","submit","forEach","card","selectedHash","selectButton"],"mappings":"wMA4BUA,eAAiBC,SAASC,cAAc,qCACxCC,YAAcF,SAASC,cAAc,qCAGvCC,YAAYC,MAAO,OAEbC,aAAeJ,SAASK,uBAAuB,gCAAgC,GACrFD,aAAaE,iBAAiB,SAAUC,IACpCA,EAAEC,iBAGFT,eAAeU,gBAAgB,YAC/BP,YAAYC,MAAQ,0CAGAC,cACpBG,EAAEG,OAAOC,KAAKC,iBAGlBZ,SAASK,uBAAuB,mBAC3BQ,SAAQC,aAECC,aAAeD,KAAKT,uBAAuB,yBAAyB,GACpEW,aAAeF,KAAKT,uBAAuB,gCAAgC,GACjFW,aAAaV,iBAAiB,SAAUC,IACpCA,EAAEC,iBAGFT,eAAeU,gBAAgB,YAC/BP,YAAYC,MAAQY,aAAaZ,6CAGba,cACpBT,EAAEG,OAAOC,KAAKC"}