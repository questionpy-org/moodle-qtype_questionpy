{"version":3,"file":"upload.min.js","sources":["../../../src/package_search/components/upload.js"],"sourcesContent":["/*\n * This file is part of the QuestionPy Moodle plugin - https://questionpy.org\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @module qtype_questionpy/package_search/components/upload\n */\n\nimport Component from 'qtype_questionpy/package_search/component';\n\nimport $ from \"jquery\";\nimport ModalForm from 'core_form/modalform';\nimport * as strings from 'core/str';\n\nexport default class extends Component {\n    stateReady() {\n        this.addEventListener(this.element, \"click\", this.openUploadForm);\n    }\n\n    /**\n     * Opens the upload form.\n     *\n     * @param {MouseEvent} event\n     */\n    openUploadForm(event) {\n        const element = event.target;\n        // TODO: reuse ModalForm?\n        const modalForm = new ModalForm({\n            formClass: \"qtype_questionpy\\\\form\\\\package_upload\",\n            args: {contextid: this.reactive.options.contextid},\n            modalConfig: {\n                title: strings.get_string(\"upload_package\", \"qtype_questionpy\"),\n            },\n            saveButtonText: strings.get_string(\"upload\"),\n            returnFocus: element,\n        });\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => this._packageWasUploaded());\n        modalForm.show();\n    }\n\n    _packageWasUploaded() {\n        this.reactive.dispatch(\"packageUploaded\");\n        $(this.reactive.target).find('[data-for=\"custom-header\"]').tab('show');\n    }\n}\n"],"names":["Component","stateReady","addEventListener","this","element","openUploadForm","event","target","modalForm","ModalForm","formClass","args","contextid","reactive","options","modalConfig","title","strings","get_string","saveButtonText","returnFocus","events","FORM_SUBMITTED","_packageWasUploaded","show","dispatch","find","tab"],"mappings":"q8CA2B6BA,mBACzBC,kBACSC,iBAAiBC,KAAKC,QAAS,QAASD,KAAKE,gBAQtDA,eAAeC,aACLF,QAAUE,MAAMC,OAEhBC,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,yCACXC,KAAM,CAACC,UAAWT,KAAKU,SAASC,QAAQF,WACxCG,YAAa,CACTC,MAAOC,QAAQC,WAAW,iBAAkB,qBAEhDC,eAAgBF,QAAQC,WAAW,UACnCE,YAAahB,UAEjBI,UAAUN,iBAAiBM,UAAUa,OAAOC,gBAAgB,IAAMnB,KAAKoB,wBACvEf,UAAUgB,OAGdD,2BACSV,SAASY,SAAS,uCACrBtB,KAAKU,SAASN,QAAQmB,KAAK,8BAA8BC,IAAI"}