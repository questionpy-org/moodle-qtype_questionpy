{"version":3,"file":"tab_content.min.js","sources":["../../../src/package_search/components/tab_content.js"],"sourcesContent":["/*\n * This file is part of the QuestionPy Moodle plugin - https://questionpy.org\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @module qtype_questionpy/package_search/components/tab_content\n */\n\nimport * as templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Component from 'qtype_questionpy/package_search/component';\nimport Pagination from 'qtype_questionpy/package_search/components/pagination';\nimport Sort from 'qtype_questionpy/package_search/components/sort';\nimport Package from 'qtype_questionpy/package_search/components/package';\n\nexport default class extends Component {\n    getWatchers() {\n        return [\n            {watch: `state.${this.category}Packages:updated`, handler: this.render},\n        ];\n    }\n\n    async create(descriptor) {\n        this.category = descriptor.category;\n        this.selectors = {\n            CONTENT: \".qpy-tab-content\",\n            SORT: '[data-for=\"sort\"]',\n            PAGINATION: '[data-for=\"pagination\"]',\n        };\n\n        // Register sort if available.\n        // TODO: register component inside mustache template.\n        const sortElement = this.getElement(this.selectors.SORT);\n        if (sortElement) {\n            new Sort({\n                element: sortElement,\n                name: `sort_${this.category}`,\n                reactive: descriptor.reactive,\n            });\n        }\n\n        // Register pagination.\n        // TODO: register component inside mustache template.\n        new Pagination({\n            element: this.getElement(this.selectors.PAGINATION),\n            name: `pagiation_${this.category}`,\n            reactive: descriptor.reactive,\n            category: this.category,\n        });\n    }\n\n    /**\n     * Groups render promises for package templates.\n     *\n     * @param {Object[]} contexts\n     * @returns {Promise}\n     * @private\n     */\n    _getPackageTemplatesPromise(contexts) {\n        let promises = [];\n        for (const context of contexts) {\n            // Context is a proxy, we need to get the target.\n            const contextObj = Object.assign({}, context);\n            const promise = templates.renderForPromise(\"qtype_questionpy/package/package_selection\", contextObj);\n            promises.push(promise);\n        }\n        return Promise.all(promises);\n    }\n\n    /**\n     * Renders every package inside the current state.\n     */\n    async render() {\n        try {\n            const packages = Array.from(this.getState()[`${this.category}Packages`].values());\n            const packageTemplates = await this._getPackageTemplatesPromise(packages);\n            const contentElement = this.getElement(this.selectors.CONTENT);\n            contentElement.innerHTML = \"\";\n            let index = 0;\n            for (const {html, js} of packageTemplates) {\n                const packageElement = templates.appendNodeContents(contentElement, html, js)[0];\n                // TODO: register component inside mustache template.\n                new Package({\n                    element: packageElement,\n                    category: this.category,\n                    packageid: packages[index++].id,\n                });\n            }\n        } catch (exception) {\n            await Notification.exception(exception);\n        }\n    }\n}\n"],"names":["Component","getWatchers","watch","this","category","handler","render","descriptor","selectors","CONTENT","SORT","PAGINATION","sortElement","getElement","Sort","element","name","reactive","Pagination","_getPackageTemplatesPromise","contexts","promises","context","contextObj","Object","assign","promise","templates","renderForPromise","push","Promise","all","packages","Array","from","getState","values","packageTemplates","contentElement","innerHTML","index","html","js","packageElement","appendNodeContents","Package","packageid","id","exception","Notification"],"mappings":"4tDA4B6BA,mBACzBC,oBACW,CACH,CAACC,sBAAgBC,KAAKC,6BAA4BC,QAASF,KAAKG,sBAI3DC,iBACJH,SAAWG,WAAWH,cACtBI,UAAY,CACbC,QAAS,mBACTC,KAAM,oBACNC,WAAY,iCAKVC,YAAcT,KAAKU,WAAWV,KAAKK,UAAUE,MAC/CE,iBACIE,cAAK,CACLC,QAASH,YACTI,oBAAcb,KAAKC,UACnBa,SAAUV,WAAWU,eAMzBC,oBAAW,CACXH,QAASZ,KAAKU,WAAWV,KAAKK,UAAUG,YACxCK,yBAAmBb,KAAKC,UACxBa,SAAUV,WAAWU,SACrBb,SAAUD,KAAKC,WAWvBe,4BAA4BC,cACpBC,SAAW,OACV,MAAMC,WAAWF,SAAU,OAEtBG,WAAaC,OAAOC,OAAO,GAAIH,SAC/BI,QAAUC,UAAUC,iBAAiB,6CAA8CL,YACzFF,SAASQ,KAAKH,gBAEXI,QAAQC,IAAIV,mCAQTW,SAAWC,MAAMC,KAAK/B,KAAKgC,qBAAchC,KAAKC,sBAAoBgC,UAClEC,uBAAyBlC,KAAKgB,4BAA4Ba,UAC1DM,eAAiBnC,KAAKU,WAAWV,KAAKK,UAAUC,SACtD6B,eAAeC,UAAY,OACvBC,MAAQ,MACP,MAAMC,KAACA,KAADC,GAAOA,MAAOL,iBAAkB,OACjCM,eAAiBhB,UAAUiB,mBAAmBN,eAAgBG,KAAMC,IAAI,OAE1EG,iBAAQ,CACR9B,QAAS4B,eACTvC,SAAUD,KAAKC,SACf0C,UAAWd,SAASQ,SAASO,MAGvC,MAAOC,iBACCC,sBAAaD,UAAUA"}