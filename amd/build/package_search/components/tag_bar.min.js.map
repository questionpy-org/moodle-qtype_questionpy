{"version":3,"file":"tag_bar.min.js","sources":["../../../src/package_search/components/tag_bar.js"],"sourcesContent":["/*\n * This file is part of the QuestionPy Moodle plugin - https://questionpy.org\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @module qtype_questionpy/package_search/components/tag_bar\n */\n\nimport Component from 'qtype_questionpy/package_search/component';\nimport Autocomplete from 'core/form-autocomplete';\nimport Ajax from 'core/ajax';\nimport {debounce} from 'core/utils';\nimport {getString} from 'core/str';\n\nexport const TagBar = class extends Component {\n    async create() {\n        this.selectors = {\n            TAG_BAR: '[data-for=\"tag-bar\"] > select',\n        };\n\n        Autocomplete.enhance(\n            // The selector to the select element.\n            this.selectors.TAG_BAR,\n            // No custom words allowed.\n            false,\n            // We want to use ajax.\n            'qtype_questionpy/package_search/components/tag_bar',\n            // The placeholder.\n            await getString('tag_bar', 'qtype_questionpy'),\n            // We do not want to be case-sensitive.\n            false,\n            // We want to show suggestions.\n            true,\n            // If no selection is made, show this string.\n            await getString('tag_bar_no_selection', 'qtype_questionpy'),\n            // Close suggestion.\n            true,\n            // We want to overwrite the layout.\n            {\n                layout: 'qtype_questionpy/package_search/tag_bar/layout',\n                input: 'qtype_questionpy/package_search/tag_bar/input',\n                selection: 'qtype_questionpy/package_search/tag_bar/selection',\n            },\n        );\n    }\n\n    stateReady() {\n        this.addEventListener(\n            this.getElement(this.selectors.TAG_BAR),\n            'change',\n            debounce((event) => this.filterPackages(event.target.selectedOptions), 300)\n        );\n    }\n\n  /**\n   * Dispatches package filter by tag mutation.\n   *\n   * @param {HTMLCollectionOf<HTMLOptionElement>} selectedOptions\n   */\n    filterPackages(selectedOptions) {\n        const tags = [];\n        for (let i = 0; i < selectedOptions.length; i++) {\n            tags.push(selectedOptions[i].value);\n        }\n        this.reactive.dispatch('filterPackagesByTags', tags);\n    }\n};\n\n/**\n * Source of data for Ajax element.\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {String} query The query string.\n * @param {Function} callback A callback function receiving an array of results.\n * @param {Function} failure A callback function to be called in case of failure, receiving the error message.\n */\nexport const transport = (selector, query, callback, failure) => {\n    const promise = Ajax.call([{\n        methodname: 'qtype_questionpy_get_tags',\n        args: {\n            query: query\n        }\n    }])[0];\n\n    // eslint-disable-next-line promise/no-callback-in-promise\n    return promise.then(callback).catch(failure);\n};\n\n/**\n * Process the results for auto complete elements.\n *\n * @param {string} selector The selector of the auto complete element.\n * @param {array} results An array or results.\n * @return {array} New array of results.\n */\nexport const processResults = (selector, results) => {\n    const tags = [];\n    for (const result of results) {\n        tags.push({\n            value: result.id,\n            label: result.tag,\n        });\n    }\n    return tags;\n};\n"],"names":["TagBar","Component","selectors","TAG_BAR","enhance","this","layout","input","selection","stateReady","addEventListener","getElement","event","filterPackages","target","selectedOptions","tags","i","length","push","value","reactive","dispatch","selector","query","callback","failure","Ajax","call","methodname","args","then","catch","results","result","id","label","tag"],"mappings":"olBA2BaA,OAAS,cAAcC,uCAEvBC,UAAY,CACbC,QAAS,2DAGAC,QAETC,KAAKH,UAAUC,SAEf,EAEA,2DAEM,kBAAU,UAAW,qBAE3B,GAEA,QAEM,kBAAU,uBAAwB,qBAExC,EAEA,CACIG,OAAQ,iDACRC,MAAO,gDACPC,UAAW,sDAKvBC,kBACSC,iBACDL,KAAKM,WAAWN,KAAKH,UAAUC,SAC/B,UACA,oBAAUS,OAAUP,KAAKQ,eAAeD,MAAME,OAAOC,kBAAkB,MAS/EF,eAAeE,uBACLC,KAAO,OACR,IAAIC,EAAI,EAAGA,EAAIF,gBAAgBG,OAAQD,IACxCD,KAAKG,KAAKJ,gBAAgBE,GAAGG,YAE5BC,SAASC,SAAS,uBAAwBN,kDAY9B,CAACO,SAAUC,MAAOC,SAAUC,UACjCC,cAAKC,KAAK,CAAC,CACvBC,WAAY,4BACZC,KAAM,CACFN,MAAOA,UAEX,GAGWO,KAAKN,UAAUO,MAAMN,iCAUV,CAACH,SAAUU,iBAC/BjB,KAAO,OACR,MAAMkB,UAAUD,QACjBjB,KAAKG,KAAK,CACNC,MAAOc,OAAOC,GACdC,MAAOF,OAAOG,aAGfrB"}