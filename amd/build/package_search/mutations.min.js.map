{"version":3,"file":"mutations.min.js","sources":["../../src/package_search/mutations.js"],"sourcesContent":["/*\n * This file is part of the QuestionPy Moodle plugin - https://questionpy.org\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @module qtype_questionpy/package_search/mutations\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nexport default class {\n\n    /**\n     * @param {{contextid: number, limit: number}} options\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Sets search current status.\n     *\n     * @param {StateManager} stateManager\n     * @param {boolean} loading\n     */\n    _setLoading(stateManager, loading) {\n        stateManager.setReadOnly(false);\n        stateManager.state.general.loading = loading;\n        stateManager.setReadOnly(true);\n    }\n\n    /**\n     * Search through given categories with same arguments.\n     *\n     * @param {Object} args the arguments\n     * @param {string} categories\n     * @returns {any}\n     * @private\n     */\n    _searchPackagesInCategories(args, ...categories) {\n        let clonedArgs = {...args};\n        let methods = [];\n        for (const category of categories) {\n            let method = {\n                methodname: 'qtype_questionpy_search_packages',\n                args: clonedArgs,\n            };\n            method.args.category = category;\n            methods.push(method);\n            clonedArgs = {...args};\n        }\n\n        return Ajax.call(methods);\n    }\n\n    /**\n     * Used to search packages.\n     *\n     * @param {StateManager} stateManager\n     * @param {Object|null} args\n     */\n    async searchPackages(stateManager, args = null) {\n        const state = stateManager.state;\n\n        // Missing arguments are taken from the current state.\n        args = args || {};\n        let mergedArgs = {\n            query: args.query || state.general.query,\n            tags: [], // TODO.\n            sort: args.sort || state.general.sort,\n            order: args.order || state.general.order,\n            limit: this.options.limit,\n            page: 0,\n            contextid: this.options.contextid,\n        };\n\n        this._setLoading(stateManager, true);\n\n        try {\n            let [all, recentlyused,\n                favourites, mine] = await this._searchPackagesInCategories(mergedArgs, 'all', 'recentlyused', 'favourites', 'mine');\n\n            stateManager.setReadOnly(false);\n            state.all.data = await all;\n            state.recentlyused.data = await recentlyused;\n            state.favourites.data = await favourites;\n            state.mine.data = await mine;\n            stateManager.setReadOnly(true);\n        } catch (exception) {\n            await Notification.exception(exception);\n        }\n\n        this._setLoading(stateManager, false);\n    }\n\n    /**\n     * Used to search for packages only by providing a query.\n     *\n     * @param {StateManager} stateManager\n     * @param {string} query\n     */\n    async searchPackagesByQuery(stateManager, query) {\n        await this.searchPackages(stateManager, {query: query});\n    }\n}\n"],"names":["constructor","options","_setLoading","stateManager","loading","setReadOnly","state","general","_searchPackagesInCategories","args","clonedArgs","methods","categories","category","method","methodname","push","Ajax","call","mergedArgs","query","tags","sort","order","limit","this","page","contextid","all","recentlyused","favourites","mine","data","exception","Notification","searchPackages"],"mappings":"+ZA6BIA,YAAYC,cACHA,QAAUA,QASnBC,YAAYC,aAAcC,SACtBD,aAAaE,aAAY,GACzBF,aAAaG,MAAMC,QAAQH,QAAUA,QACrCD,aAAaE,aAAY,GAW7BG,4BAA4BC,UACpBC,WAAa,IAAID,MACjBE,QAAU,iCAFmBC,8DAAAA,uCAG5B,MAAMC,YAAYD,WAAY,KAC3BE,OAAS,CACTC,WAAY,mCACZN,KAAMC,YAEVI,OAAOL,KAAKI,SAAWA,SACvBF,QAAQK,KAAKF,QACbJ,WAAa,IAAID,aAGdQ,cAAKC,KAAKP,8BASAR,kBAAcM,4DAAO,WAChCH,MAAQH,aAAaG,MAG3BG,KAAOA,MAAQ,OACXU,WAAa,CACbC,MAAOX,KAAKW,OAASd,MAAMC,QAAQa,MACnCC,KAAM,GACNC,KAAMb,KAAKa,MAAQhB,MAAMC,QAAQe,KACjCC,MAAOd,KAAKc,OAASjB,MAAMC,QAAQgB,MACnCC,MAAOC,KAAKxB,QAAQuB,MACpBE,KAAM,EACNC,UAAWF,KAAKxB,QAAQ0B,gBAGvBzB,YAAYC,cAAc,WAGtByB,IAAKC,aACNC,WAAYC,YAAcN,KAAKjB,4BAA4BW,WAAY,MAAO,eAAgB,aAAc,QAEhHhB,aAAaE,aAAY,GACzBC,MAAMsB,IAAII,WAAaJ,IACvBtB,MAAMuB,aAAaG,WAAaH,aAChCvB,MAAMwB,WAAWE,WAAaF,WAC9BxB,MAAMyB,KAAKC,WAAaD,KACxB5B,aAAaE,aAAY,GAC3B,MAAO4B,iBACCC,sBAAaD,UAAUA,gBAG5B/B,YAAYC,cAAc,+BASPA,aAAciB,aAChCK,KAAKU,eAAehC,aAAc,CAACiB,MAAOA"}