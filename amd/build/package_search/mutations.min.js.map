{"version":3,"file":"mutations.min.js","sources":["../../src/package_search/mutations.js"],"sourcesContent":["/*\n * This file is part of the QuestionPy Moodle plugin - https://questionpy.org\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @module qtype_questionpy/package_search/mutations\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nexport default class {\n    /**\n     * @param {{contextid: number, limit: number}} options\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Search through given categories.\n     *\n     * If no page is provided the current page will be used.\n     *\n     * @param {any} state\n     * @param {number|null} page\n     * @param {string[]} categories\n     * @returns {any}\n     * @private\n     */\n    _getSearchPackagesInCategoriesPromise(state, page, categories) {\n        const methods = [];\n        for (const category of categories) {\n            const method = {\n                methodname: \"qtype_questionpy_search_packages\",\n                args: {\n                    query: state.general.query,\n                    tags: state.general.tags,\n                    category: category,\n                    sort: state.general.sorting.sort,\n                    order: state.general.sorting.order,\n                    limit: this.options.limit,\n                    page: (typeof page === \"number\") ? page : state[category].page,\n                    contextid: this.options.contextid,\n                },\n            };\n            methods.push(method);\n        }\n        return Ajax.call(methods);\n    }\n\n    /**\n     * Used to search packages.\n     *\n     * Missing arguments are taken from the current state.\n     *\n     * @param {StateManager} stateManager\n     * @param {Object|null} args\n     * @param {string[]|null} categories\n     */\n    async searchPackages(stateManager, args = null, categories = null) {\n        const state = stateManager.state;\n\n        // Missing arguments are taken from the current state.\n        args = args || {};\n\n        // Search through every category if no categories are provided.\n        categories = categories || [\"all\", \"recentlyused\", \"favourites\", \"mine\"];\n\n        // Update general data.\n        stateManager.setReadOnly(false);\n        state.general.loading = true;\n        state.general.query = (typeof args.query === \"string\") ? args.query : state.general.query;\n        state.general.tags = [];\n        state.general.sorting = {\n            sort: args.sort || state.general.sorting.sort,\n            order: args.order || state.general.sorting.order,\n        };\n        stateManager.setReadOnly(true);\n\n        try {\n            // Get search results for each category.\n            let results = await this._getSearchPackagesInCategoriesPromise(state, args.page, categories);\n\n            stateManager.setReadOnly(false);\n            // Update category specific data.\n            for (const [index, category] of categories.entries()) {\n                state[category].data = await results[index];\n                if (typeof args.page === \"number\") {\n                    state[category].page = args.page;\n                }\n            }\n            // Update loading status.\n            state.general.loading = false;\n            stateManager.setReadOnly(true);\n        } catch (exception) {\n            await Notification.exception(exception);\n        }\n    }\n\n    /**\n     * Used to search for packages only by providing a query.\n     *\n     * @param {StateManager} stateManager\n     * @param {string} query\n     */\n    async searchPackagesByQuery(stateManager, query) {\n        await this.searchPackages(stateManager, {page: 0, query: query});\n    }\n\n    /**\n     * Used to change the current page of a tab.\n     *\n     * @param {StateManager} stateManager\n     * @param {string} category\n     * @param {number} page\n     */\n    async changePage(stateManager, category, page) {\n        await this.searchPackages(stateManager, {page: page}, [category]);\n    }\n\n    /**\n     * Used to change the current sorting.\n     *\n     * @param {StateManager} stateManager\n     * @param {string} sort\n     * @param {string} order\n     */\n    async changeSort(stateManager, sort, order) {\n        await this.searchPackages(stateManager, {sort: sort, order: order}, [\"all\", \"favourites\", \"mine\"]);\n    }\n}\n"],"names":["constructor","options","_getSearchPackagesInCategoriesPromise","state","page","categories","methods","category","method","methodname","args","query","general","tags","sort","sorting","order","limit","this","contextid","push","Ajax","call","stateManager","setReadOnly","loading","results","index","entries","data","exception","Notification","searchPackages"],"mappings":"+ZA4BIA,YAAYC,cACHA,QAAUA,QAcnBC,sCAAsCC,MAAOC,KAAMC,kBACzCC,QAAU,OACX,MAAMC,YAAYF,WAAY,OACzBG,OAAS,CACXC,WAAY,mCACZC,KAAM,CACFC,MAAOR,MAAMS,QAAQD,MACrBE,KAAMV,MAAMS,QAAQC,KACpBN,SAAUA,SACVO,KAAMX,MAAMS,QAAQG,QAAQD,KAC5BE,MAAOb,MAAMS,QAAQG,QAAQC,MAC7BC,MAAOC,KAAKjB,QAAQgB,MACpBb,KAAuB,iBAATA,KAAqBA,KAAOD,MAAMI,UAAUH,KAC1De,UAAWD,KAAKjB,QAAQkB,YAGhCb,QAAQc,KAAKZ,eAEVa,cAAKC,KAAKhB,8BAYAiB,kBAAcb,4DAAO,KAAML,kEAAa,WACnDF,MAAQoB,aAAapB,MAG3BO,KAAOA,MAAQ,GAGfL,WAAaA,YAAc,CAAC,MAAO,eAAgB,aAAc,QAGjEkB,aAAaC,aAAY,GACzBrB,MAAMS,QAAQa,SAAU,EACxBtB,MAAMS,QAAQD,MAA+B,iBAAfD,KAAKC,MAAsBD,KAAKC,MAAQR,MAAMS,QAAQD,MACpFR,MAAMS,QAAQC,KAAO,GACrBV,MAAMS,QAAQG,QAAU,CACpBD,KAAMJ,KAAKI,MAAQX,MAAMS,QAAQG,QAAQD,KACzCE,MAAON,KAAKM,OAASb,MAAMS,QAAQG,QAAQC,OAE/CO,aAAaC,aAAY,WAIjBE,cAAgBR,KAAKhB,sCAAsCC,MAAOO,KAAKN,KAAMC,YAEjFkB,aAAaC,aAAY,OAEpB,MAAOG,MAAOpB,YAAaF,WAAWuB,UACvCzB,MAAMI,UAAUsB,WAAaH,QAAQC,OACZ,iBAAdjB,KAAKN,OACZD,MAAMI,UAAUH,KAAOM,KAAKN,MAIpCD,MAAMS,QAAQa,SAAU,EACxBF,aAAaC,aAAY,GAC3B,MAAOM,iBACCC,sBAAaD,UAAUA,wCAUTP,aAAcZ,aAChCO,KAAKc,eAAeT,aAAc,CAACnB,KAAM,EAAGO,MAAOA,yBAU5CY,aAAchB,SAAUH,YAC/Bc,KAAKc,eAAeT,aAAc,CAACnB,KAAMA,MAAO,CAACG,4BAU1CgB,aAAcT,KAAME,aAC3BE,KAAKc,eAAeT,aAAc,CAACT,KAAMA,KAAME,MAAOA,OAAQ,CAAC,MAAO,aAAc"}